services:
  db:
    image: postgres:15
    container_name: ${POSTGRES_CONTAINER_NAME}
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./.env
    ports:
      - "${POSTGRES_PORT}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  db_test:
    image: postgres:15
    container_name: test_db
    restart: always
    environment:
      POSTGRES_DB: test_db # Nome do banco de dados de teste
      POSTGRES_USER: test_user # Usu√°rio de teste
      POSTGRES_PASSWORD: test_password # Senha de teste
    ports:
      - "5433:5432" # Porta diferente para o DB de teste para evitar conflitos
    volumes:
      - db_test_data:/var/lib/postgresql/data # Volume separado para dados de teste

  api:
    container_name: notes_app
    build: . # Builds from the Dockerfile in the current directory
    restart: always
    ports:
      - "${API_PORT:-8000}:8000" # Maps host port to container port 8000
    depends_on:
      - db
    environment:
      - POSTGRES_HOST=${POSTGRES_HOST:-db} # The service name of the database container
      - POSTGRES_USER=${POSTGRES_USER}
  db_test_data:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}

  adminer:
    image: adminer
    restart: always
    ports:
      - "8080:8080"
    depends_on:
      - db

volumes:
  postgres_data:
